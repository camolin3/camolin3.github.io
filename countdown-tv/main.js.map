{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".countdown {\\n  background-color: var(--background-color);\\n  color: var(--color);\\n  display: -ms-grid;\\n  display: grid;\\n  font-family: Arial, Helvetica, sans-serif;\\n  grid-gap: 1vh;\\n  -ms-grid-rows: 1fr 2em;\\n      grid-template-rows: 1fr 2em;\\n  height: 100vh;\\n  overflow: hidden;\\n  transition: background-color 1000ms ease-in-out, color 1000ms ease-in-out;\\n}\\n\\n.countdown.config {\\n  background-color: var(--color);\\n  color: var(--background-color);\\n}\\n\\n.countdown > * {\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  -ms-grid-column-align: center;\\n      justify-self: center;\\n  text-align: center;\\n}\\n\\n.counter {\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  color: var(--counter-color);\\n  display: -ms-grid;\\n  display: grid;\\n  font-family: 'Orbitron', sans-serif;\\n  font-size: 25vmin;\\n  -ms-grid-columns: (1ch)[2] 0.5ch (1ch)[2] 0.5ch (1ch)[2];\\n      grid-template-columns: repeat(2, 1ch) 0.5ch repeat(2, 1ch) 0.5ch repeat(2, 1ch);\\n  text-shadow:\\n    0 0 5px var(--counter-color),\\n    0 0 10px var(--counter-color),\\n    0 0 20px var(--background-color);\\n  transition: color 1000ms ease-in-out, text-shadow 1000ms ease-in-out;\\n\\n}\\n\\n.config .counter {\\n  color: var(--color);\\n  text-shadow:\\n    0 0 5px var(--background-color),\\n    0 0 10px var(--background-color),\\n    0 0 20px var(--color);\\n}\\n\\n.controls > * {\\n  margin: 0 1em;\\n}\\n\\n.controls > button, .controls > input {\\n  background-color: var(--background-color);\\n  border: none;\\n  border: var(--background-color) 1px solid;\\n  color: var(--color);\\n  height: calc(2em - 2px);\\n  padding: 0 1em;\\n  transition: background-color 1000ms ease-in-out, color 1000ms ease-in-out;\\n}\\n\\n.config .controls button {\\n  background-color: var(--color);\\n  color: var(--background-color);\\n}\\n\"","module.exports = \"<div class=\\\"countdown\\\" [ngClass]=\\\"{'config': !running}\\\">\\n  <section class=\\\"counter\\\" *ngIf=\\\"counter$ | async; let counter; else instructions\\\">\\n    <output>{{ counter.hh[0] }}</output>\\n    <output>{{ counter.hh[1] }}</output>\\n    <span>:</span>\\n    <output>{{ counter.mm[0] }}</output>\\n    <output>{{ counter.mm[1] }}</output>\\n    <span>:</span>\\n    <output>{{ counter.ss[0] }}</output>\\n    <output>{{ counter.ss[1] }}</output>\\n  </section>\\n  <ng-template #instructions>\\n    <p>\\n      Please select a time and press \\\"Start\\\".\\n    </p>\\n  </ng-template>\\n  <form class=\\\"controls\\\" (submit)=\\\"start()\\\">\\n    <ng-template [ngIf]=\\\"running\\\" [ngIfElse]=\\\"stopped\\\">\\n      <button type=\\\"button\\\" (click)=\\\"pauseOrContinue()\\\">⏯ Pause/Continue</button>\\n      <button type=\\\"button\\\" (click)=\\\"stop()\\\" *ngIf=\\\"running\\\">⏹ Stop</button>\\n    </ng-template>\\n    <ng-template #stopped>\\n      <input pattern=\\\"(\\\\d*h\\\\s*)?(\\\\d*m\\\\s*)?(\\\\d*s\\\\s*)?\\\" [(ngModel)]=\\\"timeStr\\\" name=\\\"timeStr\\\">\\n      <label><input type=\\\"checkbox\\\" (change)=\\\"toogleFullScreen($event.target)\\\">Go full screen</label>\\n      <button type=\\\"submit\\\">▶️ Start</button>\\n    </ng-template>\\n  </form>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { BehaviorSubject, never, Observable, Subject, timer } from 'rxjs';\nimport { finalize, map, switchMap, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as screenfull from 'screenfull';\n\ninterface TimeArray {\n  hh: string[];\n  mm: string[];\n  ss: string[];\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  counter$: Observable<TimeArray>;\n  paused$ = new BehaviorSubject<boolean>(false);\n  stop$ = new Subject();\n  running = false;\n  timeStr = '1h 30m 50s';\n\n  get time() {\n    const [, h, m, s] = this.timeStr.match(/(\\d*\\.?\\d*h\\s*)?(\\d*\\.?\\d*m\\s*)?(\\d*\\.?\\d*s\\s*)?/);\n    const strToNumber = (str) => Number((str || '0').match(/\\d*\\.?\\d+/)[0]);\n    return 3600 * strToNumber(h) + 60 * strToNumber(m) + strToNumber(s);\n  }\n\n  start() {\n    this.running = true;\n    this.paused$.next(false);\n\n    const format = n => {\n      const floor = Math.floor(n);\n      return ((floor < 10) ? '0' + floor : String(floor))\n        .split('');\n    };\n    let currentNumber = this.time;\n    const numbers$ = timer(0, 1000).pipe(\n      map(s => currentNumber--),\n      takeWhile(n => n >= 0),\n      finalize(() => this.running = currentNumber >= 0),\n    );\n    this.counter$ = this.paused$.pipe(\n      switchMap(paused => paused ? never() : numbers$),\n      map(s => ({ hh: format(s / 3600), mm: format((s % 3600) / 60), ss: format(s % 60) })),\n      takeUntil(this.stop$),\n      finalize(() => setTimeout(() => this.running = false)),\n    );\n  }\n\n  stop() {\n    this.stop$.next();\n  }\n\n  pauseOrContinue() {\n    this.paused$.next(!this.paused$.value);\n  }\n\n  toogleFullScreen({ checked }) {\n    if (!screenfull.enabled) {\n      return;\n    }\n    return checked ? screenfull.request() : screenfull.exit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}